@inherits MudComponentBase

<MudMenu PopoverClass="@(Numbers.Count == 0 ? "invisible" : "mud-popover-open")" FullWidth="true" ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.TopCenter" TransformOrigin="Origin.BottomCenter" Style="width:100%">
    <ActivatorContent>
        <MudNumericField @ref="inputRef" @bind-Value="_input" Label="Auras" HideSpinButtons="true" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Filled.Add" AdornmentColor="Color.Default" OnAdornmentClick="Add" />
    </ActivatorContent>
    <ChildContent>
        <MudTable Items="@Numbers" Hover="true">
            <RowTemplate>
                <MudTd>@context</MudTd>
                <MudTd Style="text-align:right"><MudIcon Icon="@Icons.Filled.Clear" onclick="@(() => Remove(@context))" Style="cursor:pointer" /></MudTd>
            </RowTemplate>
        </MudTable>
    </ChildContent>
</MudMenu>



@code {
    [Parameter]
    public List<int> Numbers { get; set; }

    int? _input;
    MudNumericField<int?> inputRef;
    async Task Add()
    {
        if (_input != null && _input != 0)
        {
            if (!Numbers.Any(n => n == _input))
                Numbers.Add((int)_input);
            _input = null;
            await inputRef.FocusAsync();
        }
    }

    void Remove(int number)
    {
        Numbers.Remove(number);
        this.StateHasChanged();
    }
}

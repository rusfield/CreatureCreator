@page "/health"
@using CreatureCreator.Infrastructure.Enums
@using CreatureCreator.Infrastructure.Services
@using CreatureCreator.Infrastructure.DtoModels
@using CreatureCreator.Infrastructure.Extensions


@inject CreatureCreatorService Service

<MudGrid>
    <MudItem xs="6">
        <MudTable Items="@systemStatus" Hover="true">
            <HeaderContent>
                <MudTh>@*Icon*@</MudTh>
                <MudTh Style="text-align:left">CHECK</MudTh>
                <MudTh>DESCRIPTION</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Avatar"><MudIcon Icon="@(GetStatusIcon(@context.Status))" Color="@(GetStatusColor(@context.Status))" /></MudTd>
                <MudTd DataLabel="Check" Style="text-align:left">@context.Name.ToDisplayString()</MudTd>
                <MudTd DataLabel="Description">@context.Description</MudTd>
            </RowTemplate>
        </MudTable>
    </MudItem>
</MudGrid>


@code {
    List<ValidationStatusDto> systemStatus;

    protected override async Task OnInitializedAsync()
    {
        systemStatus = await Service.ValidateDatabase();
        await base.OnInitializedAsync();
    }

    public string GetStatusIcon(ValidationStatuses status)
    {
        return (status) switch
        {
            ValidationStatuses.UNKNOWN => Icons.Material.Filled.QuestionMark,
            ValidationStatuses.OK => Icons.Material.Filled.Check,
            ValidationStatuses.WARNING => Icons.Material.Filled.WarningAmber,
            ValidationStatuses.ERROR => Icons.Material.Filled.ErrorOutline,
            _ => throw new ArgumentOutOfRangeException()
        };
    }

    public Color GetStatusColor(ValidationStatuses status)
    {
        return (status) switch
        {
            ValidationStatuses.UNKNOWN => Color.Default,
            ValidationStatuses.OK => Color.Success,
            ValidationStatuses.WARNING => Color.Warning,
            ValidationStatuses.ERROR => Color.Error,
            _ => throw new ArgumentOutOfRangeException()
        };
    }
}
